openapi: 3.0.0
info:
  title: Gestión de cuentas
  description: API para gestionar las cuentas de un cliente.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Servidor local
tags:
  - name: account
    description: Todo sobre las cuentas bancarias asociadas a un cliente
  - name: transaction
    description: Todo sobre las transacciones de una cuenta bancaria, crédito, tarjeta de crédito, monedero
  - name: product
    description: Todo sobre los tipos de producto que tiene el banco
  - name: card
    description: Todo sobre las tarjetas asociadas al banco
  - name: credit
    description: Todo sobre los créditos asociados al banco
paths:
  /account/list:
    get:
      tags:
        - account
      summary: Devuelve las cuentas de los clientes del banco
      operationId: getAccounts
      description: Obtiene las cuentas.
      parameters:
        - name: customerId
          in: query
          description: Filtro para buscar cuentas de un cliente
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountResponse"
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /account/accountTransactions/{id}:
    get:
      tags:
        - account
      summary: Obtiene las transacciones de una cuenta
      operationId: getAccountTransactions
      description: Obtiene una cuenta con sus transacciones por ID de la cuenta
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la cuenta
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDetailResponse"
        "404":
          description: "No se encontró la cuenta"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cuenta no encontrada."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /account:
    post:
      tags:
        - account
      summary: Registra una cuenta de un cliente del banco
      operationId: registerAccount
      description: Crea una nueva cuenta de un cliente
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountRequest"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se registro de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /account/{id}:
    get:
      tags:
        - account
      summary: Obtiene una cuenta de un cliente del banco
      operationId: getAccount
      description: Obtiene una cuenta por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la cuenta
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountResponse"
        "404":
          description: "No se encontró la cuenta"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cuenta no encontrada."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /account/accountStatus/{id}:
    put:
      tags:
        - account
      summary: Cambia el estado de una cuenta bancaria
      operationId: updateAccountStatus
      description: Actualiza el estado de una cuenta bancaria por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la cuenta
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
        - name: accountStatus
          description: "Indica el estado para la cuenta: Activa(A), Inactiva(I)"
          in: query
          required: true
          schema:
            type: string
            example: "A"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se actualizo de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /account/associateDebitCardWithAnAccount/{id}:
    put:
      tags:
        - account
      summary: Asocia una tarjeta de débito a una cuenta
      operationId: associateDebitCard
      description: Asocia una tarjeta de débito por el Id de la cuenta
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la cuenta
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountDebitCard"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se actualizo de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /transaction/list:
    get:
      tags:
        - transaction
      summary: Devuelve las transacciones de las cuentas de un cliente del banco
      operationId: getTransactions
      description: Obtiene las transacciones.
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionResponse"
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /transaction:
    post:
      tags:
        - transaction
      summary: Registra una transacción de una cuenta de un cliente del banco
      operationId: registerTransaction
      description: Crea una nueva transacción de un cliente
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se registro de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /transaction/{id}:
    get:
      tags:
        - transaction
      summary: Obtiene una transacción de una cuenta de un cliente del banco
      operationId: getTransaction
      description: Obtiene una transacción por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la transacción
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
        "404":
          description: "No se encontró la transacción"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Transacción no encontrada."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
    put:
      tags:
        - transaction
      summary: Actualiza una transacción de una cuenta de un cliente del banco
      operationId: updateTransaction
      description: Actualiza una transacción por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la transacción
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se actualizo de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
    delete:
      tags:
        - transaction
      summary: Elimina una transacción de una cuenta de un cliente del banco
      operationId: removeTransaction
      description: Elimina una transacción por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la transacción
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /product/list:
    get:
      tags:
        - product
      summary: Devuelve los productos del banco
      operationId: getProducts
      description: Obtiene los productos.
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductResponse"
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /product:
    post:
      tags:
        - product
      summary: Registra un producto al banco
      operationId: registerProduct
      description: Crea un nuevo producto
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequest"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se registro de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    example: "C500_001"
                  message:
                    type: string
                    example: "Error en el servidor."
  /product/{id}:
    get:
      tags:
        - product
      summary: Obtiene un producto del banco
      operationId: getProduct
      description: Obtiene un producto por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "404":
          description: "No se encontró el producto"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Producto no encontrado."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
    put:
      tags:
        - product
      summary: Actualiza un producto del banco
      operationId: updateProduct
      description: Actualiza un producto por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequest"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se actualizo de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
    delete:
      tags:
        - product
      summary: Elimina un producto del banco
      operationId: removeProduct
      description: Actualiza un producto por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /card/list:
    get:
      tags:
        - card
      summary: Devuelve las tarjetas de los clientes del banco
      operationId: getCards
      description: Obtiene las tarjetas.
      parameters:
        - name: cardType
          description: "Indica el tipo de tarjeta para poder filtrar: T: Todos, TC: Tarjeta de Crédito, TD: Tarjeta de Débito"
          in: query
          required: true
          schema:
            type: string
            default: "T"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardResponse"
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /card:
    post:
      tags:
        - card
      summary: Registra una tarjeta de un cliente del banco
      operationId: registerCard
      description: Crea una nueva tarjeta de un cliente
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardRequest"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se registro de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /card/{id}:
    get:
      tags:
        - card
      summary: Obtiene una tarjeta de un cliente del banco
      operationId: getCard
      description: Obtiene una tarjeta por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la tarjeta
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardResponse"
        "404":
          description: "No se encontró la cuenta"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cuenta no encontrada."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /card/cardStatus/{id}:
    put:
      tags:
        - card
      summary: Cambia el estado de la tarjeta
      operationId: updateCardStatus
      description: Actualiza el estado de una tarjeta por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la tarjeta
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
        - name: cardStatus
          description: "Indica el estado para: Activa(A), Bloqueada(B) y Caducada(C)"
          in: query
          required: true
          schema:
            type: string
            example: "A"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se actualizo de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /card/cardTransactions/{id}:
    get:
      tags:
        - card
      summary: Obtiene las transacciones de una tarjeta
      operationId: getCardTransactions
      description: Obtiene una tarjeta con sus transacciones por ID de la tarjeta
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la tarjeta
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardDetailResponse"
        "404":
          description: "No se encontró la tarjeta"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Tarjeta no encontrada"
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /credit/list:
    get:
      tags:
        - credit
      summary: Devuelve los créditos de los clientes del banco
      operationId: getCredits
      description: Obtiene los créditos.
      parameters:
        - name: customerId
          in: query
          description: Filtro para buscar créditos de un cliente
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CreditResponse"
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /credit:
    post:
      tags:
        - credit
      summary: Registra un crédito de un cliente del banco
      operationId: registerCredit
      description: Crea un nuevo crédito de un cliente
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditRequest"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se registro de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /credit/{id}:
    get:
      tags:
        - credit
      summary: Obtiene un crédito de un cliente del banco
      operationId: getCredit
      description: Obtiene un crédito por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID del crédito
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditResponse"
        "404":
          description: "No se encontró el crédito"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Crédito no encontrado."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /credit/creditStatus/{id}:
    put:
      tags:
        - credit
      summary: Cambia el estado del crédito
      operationId: updateCreditStatus
      description: Actualiza el estado del crédito por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID del crédito
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
        - name: creditStatus
          description: "Indica el estado para: Activo(A), Pagado(P)"
          in: query
          required: true
          schema:
            type: string
            example: "A"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Se actualizo de forma exitosa."
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
  /credit/creditTransactions/{id}:
    get:
      tags:
        - credit
      summary: Obtiene las transacciones de un crédito
      operationId: getCreditTransactions
      description: Obtiene un crédito con sus transacciones por ID del crédito
      parameters:
        - name: id
          in: path
          required: true
          description: ID del crédito
          schema:
            type: string
            example: "6764c17cb1fa3cd77d0644d8"
      responses:
        "200":
          description: "Operación finalizada correctamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditDetailResponse"
        "404":
          description: "No se encontró el crédito"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Crédito no encontrado"
        "500":
          description: "Errores técnicos"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Error en el servidor."
components:
  schemas:
    AccountResponse:
      type: object
      properties:
        id:
          description: "Id de la cuenta"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        accountNumber:
          description: "Numero de la cuenta"
          type: string
          example: "98745632112365478965"
        currentBalance:
          description: "Saldo actual de la cuenta"
          type: number
          format: double
          example: 10000
        openingDate:
          description: "Fecha de apertura de la cuenta"
          type: string
          example: "21/12/2024"
        accountStatus:
          description: "Estado de la cuenta"
          type: string
          example: "Activa"
        typeCurrency:
          description: "Tipo de moneda"
          type: string
          example: "Soles"
        customer:
          type: object
          properties:
            id:
              description: "Id del cliente de esta cuenta"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            type:
              description: "Tipo de cliente de esta cuenta"
              type: string
              example: "Personal"
        product:
          $ref: '#/components/schemas/ProductResponse'
        debitCard:
          type: object
          properties:
            id:
              description: "Id de la tarjeta de débito"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            mainAccount:
              description: "Indicador si la cuenta relacionada a la tarjeta de débito es la principal"
              type: boolean
              example: true
            order:
              description: "Orden en que la cuenta fue asociada a la tarjeta de débito"
              type: integer
              example: 1
    AccountDetailResponse:
      type: object
      properties:
        id:
          description: "Id de la cuenta"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        accountNumber:
          description: "Numero de la cuenta"
          type: string
          example: "98745632112365478965"
        currentBalance:
          description: "Saldo actual de la cuenta"
          type: number
          format: double
          example: 10000
        openingDate:
          description: "Fecha de apertura de la cuenta"
          type: string
          example: "21/12/2024"
        accountStatus:
          description: "Estado de la cuenta"
          type: string
          example: "Activa"
        typeCurrency:
          description: "Tipo de moneda"
          type: string
          example: "Soles"
        customer:
          type: object
          properties:
            id:
              description: "Id del cliente de esta cuenta"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            type:
              description: "Tipo de cliente de esta cuenta"
              type: string
              example: "Personal"
        product:
          $ref: '#/components/schemas/ProductResponse'
        debitCard:
          type: object
          properties:
            id:
              description: "Id de la tarjeta de débito"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            mainAccount:
              description: "Indicador si la cuenta relacionada a la tarjeta de débito es la principal"
              type: boolean
              example: true
            order:
              description: "Orden en que la cuenta fue asociada a la tarjeta de débito"
              type: integer
              example: 1
        transactions:
          description: "Transacciones asociadas a esta cuenta"
          type: array
          items:
            $ref: '#/components/schemas/TransactionResponse'
    AccountRequest:
      type: object
      required:
        - accountNumber
        - currentBalance
        - openingDate
        - accountStatus
        - typeCurrency
        - customer
        - productId
      properties:
        accountNumber:
          description: "Numero de la cuenta"
          type: string
          example: "98745632112365478965"
        currentBalance:
          description: "Saldo actual de la cuenta"
          type: number
          format: double
          example: 10000
        openingDate:
          description: "Fecha de apertura de la cuenta"
          type: string
          example: "21/12/2024"
        accountStatus:
          description: "Estado de la cuenta: Activa(A), Inactiva(I)"
          type: string
          example: "A"
          enum:
            - A
            - I
        typeCurrency:
          description: "Tipo de moneda: Soles(PEN), Dolares(USD)"
          type: string
          example: "PEN"
          enum:
            - PEN
            - USD
        customer:
          type: object
          properties:
            id:
              description: "Id del cliente de esta cuenta"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            type:
              description: "Tipo de cliente de esta cuenta: Personal(P) y Empresarial(E)"
              type: string
              example: "P"
              enum:
                - P
                - E
        productId:
          description: "Id del producto a la que pertenece la cuenta"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
    AccountDebitCard:
      type: object
      properties:
        id:
          description: "Id de la tarjeta de débito"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        mainAccount:
          description: "Indicador si la cuenta relacionada a la tarjeta de débito es la principal"
          type: boolean
          example: true
    TransactionResponse:
      type: object
      properties:
        id:
          description: "Id de la transacción"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        category:
          description: "Categoría de la transacción"
          type: string
          example: "Depósito"
        type:
          description: "Tipo de transacción"
          type: string
          example: "Movimiento"
        accountId:
          description: "Id de la cuenta de esta transacción"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        amount:
          description: "Monto de la transacción"
          type: number
          format: double
          example: 250
        transactionDate:
          description: "Fecha de la transacción"
          type: string
          example: "21/12/2024"
        description:
          description: "Descripción de la transacción"
          type: string
          example: "Se realiza depósito a la cuenta"
    TransactionRequest:
      type: object
      required:
        - type
        - accountId
        - amount
        - transactionDate
      properties:
        category:
          description: "Categoría de la transacción: para las cuentas bancarias Depósito(D), Retiro(R) y T.C Consumo(C)"
          type: string
          example: "D"
          enum:
            - D
            - R
            - C
        type:
          description: "Tipo de transacción: para cuentas bancarias y T.C Movimiento(M), para credito y T.C Pago(P)"
          type: string
          example: "M"
          enum:
            - M
            - P
        accountId:
          description: "Id de la cuenta de esta transacción"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        amount:
          description: "Monto de la transacción"
          type: number
          format: double
          example: 250
        transactionDate:
          description: "Fecha de la transacción"
          type: string
          example: "21/12/2024"
        description:
          description: "Descripción de la transacción"
          type: string
          example: "Se realiza depósito de la cuenta"
    ProductResponse:
      type: object
      properties:
        id:
          description: "Id del producto"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        name:
          description: "Nombre del producto"
          type: string
          example: "Tarjeta crédito - Personal"
        type:
          description: "Tipo de producto: Pasivo(P), Activo(A)"
          type: string
          example: "Activo"
        category:
          description: "Categoria para el tipo de producto; para los Pasivos: Ahorro(A), Cuenta corriente(CC), Plazo fijo(PF) y para los Activos: Personal(P), Empresarial(E), Tarjeta crédito(TC)"
          type: string
          example: "Tarjeta crédito"
        typeCard:
          description: "Tipo de tarjeta de crédito y débito: Personal(P) y Empresarial(E)"
          type: string
          example: "Personal"
        description:
          description: "Descripción del producto"
          type: string
          example: "Cuenta bancaria"
        monthlyMovements:
          description: "Número de movimientos mensuales"
          type: integer
          example: 30
        commissionMaintenance:
          description: "Comisión por mantenimiento"
          type: number
          format: double
          example: 10
        movementDay:
          description: "Día del movimiento para el Plazo Fijo"
          type: integer
          example: 30
    ProductRequest:
      type: object
      required:
        - category
        - type
      properties:
        name:
          description: "Nombre del producto"
          type: string
          example: "Tarjeta crédito - Personal"
        type:
          description: "Tipo de producto: Pasivo(P), Activo(A)"
          type: string
          example: "A"
          enum:
            - P
            - A
        category:
          description: "Categoria para el tipo de producto; para los Pasivos: Ahorro(A), Cuenta corriente(CC), Plazo fijo(PF), Tarjeta débito(TD) y para los Activos: Personal(P), Empresarial(E), Tarjeta crédito(TC)"
          type: string
          example: "TC"
          enum:
            - A
            - CC
            - PF
            - P
            - E
            - TC
            - TD
        typeCard:
          description: "Tipo de tarjeta de crédito y débito: Personal(P) y Empresarial(E)"
          type: string
          example: "P"
          enum:
            - P
            - E
        description:
          description: "Descripción del producto"
          type: string
          example: "Crédito"
        monthlyMovements:
          description: "Número de movimientos mensuales"
          type: integer
          example: 30
        commissionMaintenance:
          description: "Comisión por mantenimiento"
          type: number
          format: double
          example: 10
        movementDay:
          description: "Día del movimiento para el Plazo Fijo"
          type: integer
          example: 30
    CardResponse:
      type: object
      properties:
        id:
          description: "Id de la tarjeta"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        cardNumber:
          description: "Numero de la tarjeta"
          type: string
          example: "98745632112365478965"
        cvv:
          description: "Código de seguridad de la tarjeta"
          type: integer
          example: 321
        openingDate:
          description: "Fecha de apertura de la tarjeta"
          type: string
          example: "21/12/2024"
        expirationDate:
          description: "Fecha de vencimiento de la tarjeta"
          type: string
          example: "21/12/2029"
        product:
          $ref: '#/components/schemas/ProductResponse'
        customer:
          type: object
          properties:
            id:
              description: "Id del cliente de esta tarjeta"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            type:
              description: "Tipo de cliente de esta tarjeta"
              type: string
              example: "Personal"
        typeCurrency:
          description: "Tipo de moneda"
          type: string
          example: "Soles"
        cardStatus:
          description: "Estado de la tarjeta: Activa(A), Bloqueada(B) y Caducada(C)"
          type: string
          example: "Activa"
        creditLimit:
          description: "Limite de crédito de la tarjeta"
          type: number
          format: double
          example: 10000
        currentBalance:
          description: "Saldo actual de la tarjeta"
          type: number
          format: double
          example: 10000
        usedBalance:
          description: "Saldo usado de la tarjeta"
          type: number
          format: double
          example: 5000
        interestRate:
          description: "Tasa de interes de la tarjeta"
          type: number
          format: double
          example: 10000
        paymentDate:
          description: "Día del mes en el que se paga la tarjeta"
          type: integer
          example: 15
        minimumPayment:
          description: "Pago minimo de la tarjeta"
          type: number
          format: double
          example: 100
    CardRequest:
      type: object
      required:
        - cardNumber
        - cvv
        - openingDate
        - expirationDate
        - productId
        - customer
        - typeCurrency
        - cardStatus
      properties:
        cardNumber:
          description: "Numero de la tarjeta"
          type: string
          example: "98745632112365478965"
        cvv:
          description: "Código de seguridad de la tarjeta"
          type: integer
          example: 321
        openingDate:
          description: "Fecha de apertura de la tarjeta"
          type: string
          example: "21/12/2024"
        expirationDate:
          description: "Fecha de vencimiento de la tarjeta"
          type: string
          example: "21/12/2029"
        productId:
          description: "Id del producto a la que pertenece la tarjeta"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        customer:
          type: object
          properties:
            id:
              description: "Id del cliente de esta tarjeta"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            type:
              description: "Tipo de cliente de esta tarjeta: Personal(P) y Empresarial(E)"
              type: string
              example: "P"
              enum:
                - P
                - E
        typeCurrency:
          description: "Tipo de moneda: Soles(PEN), Dolares(USD)"
          type: string
          example: "PEN"
          enum:
            - PEN
            - USD
        cardStatus:
          description: "Estado de la tarjeta: Activa(A), Bloqueada(B) y Caducada(C)"
          type: string
          example: "A"
          enum:
            - A
            - B
            - C
        creditLimit:
          description: "Limite de crédito de la tarjeta"
          type: number
          format: double
          example: 10000
        currentBalance:
          description: "Saldo actual de la tarjeta"
          type: number
          format: double
          example: 10000
        interestRate:
          description: "Tasa de interes de la tarjeta"
          type: number
          format: double
          example: 10000
        paymentDate:
          description: "Día del mes en el que se paga la tarjeta"
          type: integer
          example: 15
        accountId:
          description: "Id de la cuenta de esta tarjeta"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
    CardDetailResponse:
      type: object
      properties:
        id:
          description: "Id de la tarjeta"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        cardNumber:
          description: "Numero de la tarjeta"
          type: string
          example: "98745632112365478965"
        cvv:
          description: "Código de seguridad de la tarjeta"
          type: integer
          example: 321
        openingDate:
          description: "Fecha de apertura de la tarjeta"
          type: string
          example: "21/12/2024"
        expirationDate:
          description: "Fecha de vencimiento de la tarjeta"
          type: string
          example: "21/12/2029"
        product:
          $ref: '#/components/schemas/ProductResponse'
        customer:
          type: object
          properties:
            id:
              description: "Id del cliente de esta tarjeta"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            type:
              description: "Tipo de cliente de esta tarjeta"
              type: string
              example: "Personal"
        typeCurrency:
          description: "Tipo de moneda"
          type: string
          example: "Soles"
        cardStatus:
          description: "Estado de la tarjeta: Activa(A), Bloqueada(B) y Caducada(C)"
          type: string
          example: "Activa"
        creditLimit:
          description: "Limite de crédito de la tarjeta"
          type: number
          format: double
          example: 10000
        currentBalance:
          description: "Saldo actual de la tarjeta"
          type: number
          format: double
          example: 10000
        usedBalance:
          description: "Saldo usado de la tarjeta"
          type: number
          format: double
          example: 5000
        interestRate:
          description: "Tasa de interes de la tarjeta"
          type: number
          format: double
          example: 10000
        paymentDate:
          description: "Día del mes en el que se paga la tarjeta"
          type: integer
          example: 15
        minimumPayment:
          description: "Pago minimo de la tarjeta"
          type: number
          format: double
          example: 100
        transactions:
          description: "Transacciones asociadas a esta tarjeta"
          type: array
          items:
            $ref: '#/components/schemas/TransactionResponse'
    CreditResponse:
      type: object
      properties:
        id:
          description: "Id del crédito"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        creditNumber:
          description: "Numero del crédito"
          type: string
          example: "98745632112365478965"
        creditAmount:
          description: "Monto del crédito aprobado"
          type: number
          format: double
          example: 10000
        interestRate:
          description: "Tasa de interes del crédito"
          type: number
          format: double
          example: 0.2
        totalToPay:
          description: "Monto total a pagar del crédito: crédito aprobado + inteses"
          type: number
          format: double
          example: 12000
        pendingAmount:
          description: "Monto pendiente por pagar del crédito aprobado"
          type: number
          format: double
          example: 12000
        loanTerm:
          description: "Plazo del prestamos en meses"
          type: integer
          example: 24
        quotaNumber:
          description: "Número de cuotas"
          type: integer
          example: 24
        quotaPaid:
          description: "Cuotas pagadas"
          type: integer
          example: 0
        quotaPending:
          description: "Cuotas pendientes"
          type: integer
          example: 24
        monthlyPayment:
          description: "Pago mensual del crédito"
          type: number
          format: double
          example: 500
        creditStatus:
          description: "Estado del crédito: Activo(A), Pagado(P)"
          type: string
          example: "Activo"
        typeCurrency:
          description: "Tipo de moneda"
          type: string
          example: "Soles"
        openingDate:
          description: "Fecha de apertura del crédito"
          type: string
          example: "21/12/2024"
        expirationDate:
          description: "Fecha de vencimiento del crédito"
          type: string
          example: "21/12/2026"
        paymentDate:
          description: "Día del mes en el que se paga la cuota del crédito"
          type: integer
          example: 15
        customer:
          type: object
          properties:
            id:
              description: "Id del cliente de este crédito"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            type:
              description: "Tipo de cliente de este crédito"
              type: string
              example: "Personal"
        product:
          $ref: '#/components/schemas/ProductResponse'
    CreditRequest:
      type: object
      required:
        - creditNumber
        - creditAmount
        - interestRate
        - loanTerm
        - creditStatus
        - typeCurrency
        - openingDate
        - expirationDate
        - paymentDate
        - customer
        - productId
      properties:
        creditNumber:
          description: "Numero del crédito"
          type: string
          example: "98745632112365478965"
        creditAmount:
          description: "Monto del crédito aprobado"
          type: number
          format: double
          example: 10000
        interestRate:
          description: "Tasa de interes del crédito"
          type: number
          format: double
          example: 0.2
        loanTerm:
          description: "Plazo del prestamos en meses"
          type: integer
          example: 24
        creditStatus:
          description: "Estado del crédito: Activo(A), Pagado(P)"
          type: string
          example: "A"
          enum:
            - A
            - P
        typeCurrency:
          description: "Tipo de moneda: Soles(PEN), Dolares(USD)"
          type: string
          example: "PEN"
          enum:
            - PEN
            - USD
        openingDate:
          description: "Fecha de apertura del crédito"
          type: string
          example: "21/12/2024"
        expirationDate:
          description: "Fecha de vencimiento del crédito"
          type: string
          example: "21/12/2026"
        paymentDate:
          description: "Día del mes en el que se paga la cuota del crédito"
          type: integer
          example: 15
        customer:
          type: object
          properties:
            id:
              description: "Id del cliente de este crédito"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            type:
              description: "Tipo de cliente de este crédito: Personal(P) y Empresarial(E)"
              type: string
              example: "P"
              enum:
                - P
                - E
        productId:
          description: "Id del producto a la que pertenece el crédito"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
    CreditDetailResponse:
      type: object
      properties:
        id:
          description: "Id del crédito"
          type: string
          example: "6764c17cb1fa3cd77d0644d8"
        creditNumber:
          description: "Numero del crédito"
          type: string
          example: "98745632112365478965"
        creditAmount:
          description: "Monto del crédito aprobado"
          type: number
          format: double
          example: 10000
        interestRate:
          description: "Tasa de interes del crédito"
          type: number
          format: double
          example: 0.2
        totalToPay:
          description: "Monto total a pagar del crédito: crédito aprobado + inteses"
          type: number
          format: double
          example: 12000
        pendingAmount:
          description: "Monto pendiente por pagar del crédito aprobado"
          type: number
          format: double
          example: 12000
        loanTerm:
          description: "Plazo del prestamos en meses"
          type: integer
          example: 24
        quotaNumber:
          description: "Número de cuotas"
          type: integer
          example: 24
        quotaPaid:
          description: "Cuotas pagadas"
          type: integer
          example: 0
        quotaPending:
          description: "Cuotas pendientes"
          type: integer
          example: 24
        monthlyPayment:
          description: "Pago mensual del crédito"
          type: number
          format: double
          example: 500
        creditStatus:
          description: "Estado del crédito: Activo(A), Pagado(P)"
          type: string
          example: "Activo"
        typeCurrency:
          description: "Tipo de moneda"
          type: string
          example: "Soles"
        openingDate:
          description: "Fecha de apertura del crédito"
          type: string
          example: "21/12/2024"
        expirationDate:
          description: "Fecha de vencimiento del crédito"
          type: string
          example: "21/12/2026"
        paymentDate:
          description: "Día del mes en el que se paga la cuota del crédito"
          type: integer
          example: 15
        customer:
          type: object
          properties:
            id:
              description: "Id del cliente de este crédito"
              type: string
              example: "6764c17cb1fa3cd77d0644d8"
            type:
              description: "Tipo de cliente de este crédito"
              type: string
              example: "Personal"
        product:
          $ref: '#/components/schemas/ProductResponse'
        transactions:
          description: "Transacciones asociadas a este crédito"
          type: array
          items:
            $ref: '#/components/schemas/TransactionResponse'